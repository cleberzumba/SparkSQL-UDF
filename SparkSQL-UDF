SparkSQL UDF (User Defined Function)
------------------------------------



from pyspark.sql import SparkSession
from pyspark.sql.functions import udf, avg
from pyspark.sql.types import StringType

# Initialize the SparkSession
spark = SparkSession.builder.appName("AgeGroupApp").getOrCreate()

# Creates an example DataFrame (replace this with loading your actual DataFrame)
data = [(1, 15, 60), (2, 25, 70), (3, 35, 80), (4, 45, 90)]
columns = ["id", "age", "Speed"]
df = spark.createDataFrame(data, columns)



######################################################
# How to calculate the average speed by age group
######################################################

# Function to create age group
def cria_faixa_etaria(age):
    if age < 20:
        return '10–20'
    elif age < 30:
        return '20–30'
    elif age < 40:
        return '30–40'
    else:
        return '40+'

# Create the UDF
udf_agegroup = udf(cria_faixa_etaria, StringType())

# Apply the UDF
userDFAgeGroup = df.withColumn('AgeGroup', udf_agegroup('age'))


# Show the resulting DataFrame
userDFAgeGroup.show()

# Group By, Aggregation and Ordering
# Average speed by age group
userDFAgeGroup.groupBy('AgeGroup') \
              .agg(avg('Speed').alias('avg_speed')) \
              .orderBy('avg_speed', ascending=False) \
              .show()





#############################################################
# How to calculate average speed by speed range
#############################################################

# Function to create speed range
def cria_faixa_veloc(speed):
    if speed < 50:
        return 'Baixa Velocidade'
    elif speed < 80:
        return 'Velocidade Média'
    else:
        return 'Alta Velocidade'


# Create the UDF
udf_speedgroup = udf(lambda z: cria_faixa_veloc(z))

# Apply the UDF
userDFSpeedGroup = userDFAgeGroup.withColumn('SpeedGroup', udf_speedgroup('Speed'))


userDFSpeedGroup.show()


# Group By, Aggregation and Ordering
# Average speed by speed group
userDFSpeedGroup.groupBy('AgeGroup') \
                .agg(avg('Speed').alias('avg_speed')) \
                .orderBy('avg_speed', ascending=False) \
                .show()
